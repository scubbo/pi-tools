dataVolume:
  nfsServer: rassigma.avril
  nfsPath: /mnt/BERTHA/gitea

gitea:
  global:
    storageClass: longhorn

  image:
    tag: "1.18.0"

  persistence:
    enabled: true
    existingClaim: gitea-data-pvc

  ingress:
    enabled: true
    apiVersion: "networking.k8s.io/v1"
    className: traefik
    annotations:
      ingress.kubernetes.io/custom-request-headers: "Host: gitea.scubbo.org"
      # Without this, I was getting `413 Request Entity Too Large` errors
      # https://stackoverflow.com/questions/62657398/how-to-set-max-request-body-size-in-traefik-ingress-controller-for-kubernetes
      # originally put me on to it, though there's more documentation in
      # https://doc.traefik.io/traefik/middlewares/http/buffering/#memrequestbodybytes,
      # though that didn't actually show to set the value on the ingress itself.
      #
      # In the end I gave up and used Copilot :'(
      #
      # `maxrequestbodybytes` chosen by finding the size of the image I'm trying to upload (1.57GB) and adding 20% buffer
      # `memrequestbodybytes` chosen by keeping it in-proportion with `maxrequest` from example values (approx. 2x)
      traefik.ingress.kubernetes.io/max-request-body-bytes: "1884000000"
    hosts:
      - host: gitea.avril
        paths:
          - path: /
            pathType: Prefix

  gitea:
    metrics:
      enabled: true
    config:
      server:
        ROOT_URL: "https://gitea.scubbo.org"
        SSH_DOMAIN: ssh-gitea.scubbo.org
      packages:
        ENABLED: "true"


  memcached:
    # Since Bitnami don't support ARM64/Raspberries Pi
    image:
      repository: "arm64v8/memcached"
      tag: "1.6.17"
    arguments: []
    diagnosticMode:
      enabled: false
    nodeAffinityPreset:
      type: hard
      key: kubernetes.io/arch
      values:
        - arm64

  postgresql:
    enabled: true
    image:
      # Bitnami doesn't support ARM64: https://github.com/bitnami/charts/issues/7305
      repository: "arm64v8/postgres"
      tag: "15.1"
    primary:
      nodeAffinityPreset:
        type: hard
        key: kubernetes.io/arch
        values:
          - arm64

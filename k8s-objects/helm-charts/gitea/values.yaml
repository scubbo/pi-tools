dataVolume:
  nfsServer: rassigma.avril
  nfsPath: /mnt/BERTHA/gitea

gitea:
  global:
    storageClass: freenas-iscsi-csi

  image:
    tag: "1.23.4"

  persistence:
    enabled: true
    create: false
    # existingClaim: gitea-data-pvc # old name
    claimName: gitea-data-pvc

  ingress:
    enabled: true
    apiVersion: "networking.k8s.io/v1"
    className: traefik
    annotations:
      ingress.kubernetes.io/custom-request-headers: "Host: gitea.scubbo.org"
      # Without this, I was getting `413 Request Entity Too Large` errors
      # https://stackoverflow.com/questions/62657398/how-to-set-max-request-body-size-in-traefik-ingress-controller-for-kubernetes
      # originally put me on to it, though there's more documentation in
      # https://doc.traefik.io/traefik/middlewares/http/buffering/#memrequestbodybytes,
      # though that didn't actually show to set the value on the ingress itself.
      #
      # In the end I gave up and used Copilot :'(
      #
      # `maxrequestbodybytes` chosen by finding the size of the image I'm trying to upload (1.57GB) and adding 20% buffer
      # `memrequestbodybytes` chosen by keeping it in-proportion with `maxrequest` from example values (approx. 2x)
      traefik.ingress.kubernetes.io/max-request-body-bytes: "1884000000"
    hosts:
      - host: gitea.avril
        paths:
          - path: /
            pathType: Prefix

  gitea:
    metrics:
      enabled: true
    config:
      server:
        ROOT_URL: "https://gitea.scubbo.org"
        SSH_DOMAIN: ssh-gitea.scubbo.org
      packages:
        ENABLED: "true"

  postgresql:
    enabled: true
    image:
      tag: "16.6.0-debian-12-r2"
    primary:
      nodeAffinityPreset:
        type: hard
        key: kubernetes.io/arch
        values:
          # Bitnami doesn't support ARM64: https://github.com/bitnami/charts/issues/7305
          - amd64

  postgresql-ha:
    enabled: false

  redis-cluster:
    # As of Chart version 10.0.0, Gitea Helm chart maintainers recommend pinning images of dependencies
    # https://gitea.com/gitea/helm-chart#dependency-versioning
    image:
      tag: 7.2.3-debian-11-r1

  actions:
    enabled: true
    provisioning:
      enabled: true
    statefulset:
      persistence:
        size: 1Gi
      # Unfortunately we need to specify the label->image mappings, rather than being able to specify images in the
      # workflow definitions.
      # Consistent with GitHub Actions implementations, and I guess it is a sensible restriction for a multi-user
      # platform to prevent arbitrary execution (though, tbh, arbitrary execution is in some sense the point of a CI
      # system).
      actRunner:
        config: |
          log:
            level: debug
          cache:
            # Probably want to change this?
            enabled: false
          runner:
            labels:
              - "ubuntu-latest:docker://gitea/runner-images:ubuntu-latest"
          # Much of the below is taken from https://gitea.com/gitea/act_runner/issues/280#issuecomment-898726
          # on how to run DinD
          container:
            # I'm surprised that `privileged: true` isn't required, since
            # https://gitea.com/gitea/act_runner/src/branch/main/internal/pkg/config/config.example.yaml#L68 says it
            # should be required for DinD.
            valid_volumes:
              - /certs
              - /var/run/secrets/kubernetes.io/serviceaccount
            # `docker_host` is mentioned in https://gitea.com/gitea/act_runner/src/branch/main/internal/pkg/config/config.example.yaml#L92,
            # but I haven't tried that - the implementation given by the `act_runner` issue linked above worked first try.
            #
            # `--volume ...` causes the specifed volume to get mounted into the container - which, in the case of
            # this particular path, means that the container can use the `token` to act-as the Kubernetes Service
            # Account. This is a sub-optimal solution for authentication - see my question here:
            # https://forum.gitea.com/t/actions-hashicorp-vault-integration/10982
            # Took inspiration from https://gitea.com/gitea/act_runner/issues/378#issuecomment-918060
            options: |
              --add-host=docker:host-gateway -v /certs:/certs
              -e "DOCKER_HOST=tcp://docker:2376/"
              -e "DOCKER_TLS_CERTDIR=/certs"
              -e "DOCKER_TLS_VERIFY=1"
              -e "DOCKER_CERT_PATH=/certs/server"
              --volume "/var/run/secrets/kubernetes.io/serviceaccount:/var/run/secrets/kubernetes.io/serviceaccount:ro"

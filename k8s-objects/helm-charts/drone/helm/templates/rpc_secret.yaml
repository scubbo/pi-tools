{{- /*
      https://itnext.io/manage-auto-generated-secrets-in-your-helm-charts-5aee48ba6918
  */}}
{{- if empty .Values.manualRPCSecretName }}
apiVersion: v1
kind: Secret
metadata:
  name: "rpc-secret"
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $existing_secret := (lookup "v1" "Secret" .Release.Namespace "rpc-secret") | default dict }}
  {{- $secretData := (get $existing_secret "data") | default dict }}
  # set $secret to existing secret data or generate a random one when not exists
  {{- $secret := (get $secretData "secret") | default (randAlphaNum 32 | b64enc) }}
  # generate 32 chars long random string, base64 encode it and then double-quote the result string.
  secret: {{ $secret | quote }}
{{- end }}
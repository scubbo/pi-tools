global:
  storageClass: longhorn

oncall:
  base_url: grafana.avril
  externalGrafana:
    url: grafana.avril
  fullnameOverride: "oncall-ovrd" # Without this, there are clashes between resources (ServiceAccounts, Secrets) that are similarly named between Oncall itself and the underlying Grafana templates. Also this needs to b e short otherwise the batch jobs created have names that are too long

  cert-manager:
    enabled: false

  grafana:
    enabled: false

  ingress:
    enabled: false

  ingress-nginx:
    enabled: false

  rabbitmq:
    enabled: false

  externalRabbitmq:
    host: "grafana-oncall-rabbitmq-cluster" # Do we need to set port?
    # This secret is created by the cluster defined in `rabbitmq-cluster.yaml`
    existingSecret: "grafana-oncall-cluster-default-user"

  redis:
    image:
      repository: arm64v8/redis
      tag: 7.0

  mariadb:
    enabled: false
    # Can't use the below because I can't find an arm64-compatible image for volumePermissions
    # that actually has a shell at /bin/bash, the hard-coded path (arm64v8/bash installs it at /usr/local/bin/bash)
#    image:
#      repository: arm64v8/mariadb
#      tag: 10.11-rc
#    volumePermissions:
#      enabled: true
#      image:
#        repository: arm64v8/bash
#        tag: 5.2

  database:
    type: postgresql

  postgresql:
    enabled: true
    image:
      repository: arm64v8/postgres
      tag: 15.1



# https://github.com/rabbitmq/cluster-operator/issues/366
# See also https://blog.scubbo.org/posts/grafana-oncall/ for instructions on how to build your own
rabbitmq-cluster-operator:
  clusterOperator:
    image:
      repository: mohsinonxrm/rabbitmq-cluster-operator
      tag: 2.0.0
  msgTopologyOperator:
    image:
      repository: mohsinonxrm/rabbitmq-messaging-topology-operator
      tag: 1.9.0
  rabbitmqImage:
    # Inconsistent structure, because of course.
    # I _really_ dislike Bitnami's refusal to support arm64...
    repository: arm64v8/rabbitmq
    tag: 3.11


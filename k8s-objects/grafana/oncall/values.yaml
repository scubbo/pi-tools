# https://github.com/grafana/oncall/tree/dev/helm/oncall

base_url: oncall.grafana.avril

# Grafana itself is installed and managed separately
grafana:
  enabled: false

# TODO - docs here: https://github.com/grafana/oncall/tree/dev/helm/oncall#connect-external-mysql
# have `mariadb.enabled=true`. That seems...wrong?
mysql:
  enabled: false

mariadb:
  enabled: false

externalMysql:
  host: mysql-grafana-oncall.grafana.svc.cluster.local
  port: 3306
  db_name: oncall
  user: root
  # password isn't set here - see the README.md guide!

###
# RabbitMQ
###
rabbitmq:
  enabled: false

externalRabbitmq:
  # This service is created by the `kubectl apply -f rabbitmq-cluster.yaml` call
  host: grafana-oncall-rabbitmq-cluster.grafana.svc.cluster.local
  # user and password are passed at `helm install` time - see README.md!

###
# Redis
###
redis:
  image:
    repository: arm64v8/redis
    tag: latest

# If set to true, installation will try to use LetsEncrypt to create a TLS cert for the installation.
# Which is a cool feature to have, but I don't plan to expose this externally anyway (for now, at least...),
# so wouldn't work anyway.
cert-manager:
  enabled: false

oncall:
  slack:
    enabled: false
  telegram:
    enabled: false

# Otherwise, this clashes with K3s' built-in Traefik controllers:
# `0/3 nodes are available: 1 node(s) didn't have free ports for the requested pod ports. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.`
ingress-nginx:
  enabled: false

ingress:
  enabled: true
  tls: null # What's the idiomatic way to choose between checking for object presence, and checking for "<object>.enabled"?
  # Note that `className` here will not actually take any effect until https://github.com/grafana/oncall/pull/567 is
  # pushed - the annotation below is the work-around until then (and can be deleted after it's pushed)
  className: traefik
  annotations:
    "kubernetes.io/ingress.class": "traefik"